# ./serverless.yml
service: tag-bot-telegram-web
provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-2
  # stage: ${opt:stage}
  stage: dev
  # disable when deploying to production
  # timeout: 60   # repository wide Lambda timeout
  environment:  # repository wide Lambda env variables
    STAGE: ${self:provider.stage}
    # This, too, can be disabled when deploying to production. Enable it for debugging.
    # NODE_OPTIONS: "--enable-source-maps"

custom:
  prune:
    automatic: true
    number: 3

  # serverless-offline: 
  #   useChildProcesses: true

  # For serverless-dynamodb-local plugin
  serverless-dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      docker: true
      port: 8000
      dbPath: '/'
      sharedDb: false
      inMemory: false
      migrate: true
      seed: true
      convertEmptyValues: true
      # help: true
    # Uncomment only if you already have a DynamoDB running locally
      noStart: true

functions:
  # Serverless Framework specific syntax
  tagAllBot:
    handler: ./src/lambda.handler
    architecture: arm64
    events:
      - httpApi: 'POST /tagAllBot'

plugins:
  - serverless-dotenv-plugin

  - serverless-dynamodb


  - serverless-offline # used for local execution

  - serverless-prune-plugin # used for removing old versions from the lambda storage

# Dynamo lcally
# resources:
#   Conditions:
#         IsDev:
#           Fn::Equals:
#             - ${opt:stage}
#             - dev  
#   Resources:
#     UserTopicGroup:
#       Condition: IsDev
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: UserTopicGroup
#         AttributeDefinitions:
#           - AttributeName: GroupID
#             AttributeType: S
#           - AttributeName: TopicID#UserID
#             AttributeType: S
#         KeySchema:
#           - AttributeName: GroupID
#             KeyType: HASH
#           - AttributeName: TopicID#UserID
#             KeyType: RANGE
#         ProvisionedThroughput:
#           ReadCapacityUnits: 5
#           WriteCapacityUnits: 5